/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    checkstyle
    pmd
    id("org.openrewrite.rewrite") version "latest.release"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    rewrite(platform("org.openrewrite.recipe:rewrite-recipe-bom:latest.release"))
    rewrite("org.openrewrite.recipe:rewrite-static-analysis")
    rewrite("org.openrewrite.recipe:rewrite-testing-frameworks")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.laynes.sudoku.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

checkstyle {
    val archive =
        configurations.checkstyle
            .get()
            .resolve()
            .filter { it.name.startsWith("checkstyle") }
    config = resources.text.fromArchiveEntry(archive, "google_checks.xml")
}

rewrite {
    activeRecipe(
        "org.openrewrite.java.testing.junit5.JUnit5BestPractices",
        "org.openrewrite.staticanalysis.CodeCleanup",
    )
}

tasks.withType<Checkstyle> {
    val rewriteRunTask = tasks.named("rewriteRun")
    dependsOn(rewriteRunTask)
}
